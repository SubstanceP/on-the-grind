{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n// @ts-ignore\nimport React from 'react';\nimport Fade from '@material-ui/core/Fade';\nimport ReactImageMagnify from 'react-image-magnify';\nvar zoomDuration = 150;\n\nvar Item = /*#__PURE__*/function (_React$Component) {\n  _inherits(Item, _React$Component);\n\n  function Item(props) {\n    var _this;\n\n    _classCallCheck(this, Item);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Item).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"updateWindowDimensions\", function () {\n      _this.setState({\n        width: window.innerWidth\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"swipeDisabled\", function () {\n      _this.setState({\n        inMagnify: true\n      });\n\n      _this.props.swipeDisabled();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"swipeTimer\", setTimeout(function () {\n      return null;\n    }, 0));\n\n    _defineProperty(_assertThisInitialized(_this), \"touchStart\", function () {\n      _this.swipeTimer = setTimeout(function () {\n        return _this.swipeDisabled();\n      }, zoomDuration);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"touchEnd\", function () {\n      clearTimeout(_this.swipeTimer);\n\n      _this.props.swipeEnabled();\n\n      _this.setState({\n        inMagnify: false\n      });\n    });\n\n    _this.state = {\n      width: 0,\n      inMagnify: false\n    };\n    return _this;\n  }\n\n  _createClass(Item, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateWindowDimensions();\n      window.addEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowDimensions);\n    }\n  }, {\n    key: \"getImageDimension\",\n    value: function getImageDimension() {\n      var width = this.state.width;\n\n      switch (true) {\n        // case width < 380:\n        //   return width;\n        case width < 600:\n          return width;\n\n        case width < 960:\n          return 450;\n\n        case width < 1280:\n          return 600;\n\n        case width < 1920:\n          return 700;\n\n        default:\n          return 800;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var article = this.props.article;\n      var width = this.getImageDimension();\n      var rootStyle = {\n        minHeight: this.getImageDimension() + 'px'\n      };\n\n      if (this.state.width < 600) {\n        rootStyle = {\n          minHeight: this.getImageDimension() + 'px'\n        };\n      }\n\n      var itemStyle = {\n        width: this.getImageDimension() + 'px'\n      };\n      var smallImage = {\n        alt: '',\n        width: width,\n        height: width,\n        src: article\n      };\n      var largeImage = {\n        src: article,\n        width: width * 1.7,\n        height: width * 1.7\n      };\n      var inMagnify = this.state.inMagnify && !this.props.fingerMoving;\n      return __jsx(\"div\", {\n        style: rootStyle\n      }, __jsx(Fade, {\n        \"in\": true,\n        timeout: 400\n      }, __jsx(\"div\", {\n        onTouchStart: this.touchStart,\n        onTouchEnd: this.touchEnd,\n        onMouseEnter: this.touchStart,\n        onMouseLeave: this.touchEnd\n      }, inMagnify ? __jsx(ReactImageMagnify, {\n        imageStyle: {\n          display: 'none'\n        },\n        enlargedImagePosition: \"over\",\n        smallImage: smallImage,\n        largeImage: largeImage\n      }) : __jsx(ReactImageMagnify, {\n        pressDuration: zoomDuration,\n        imageStyle: itemStyle,\n        enlargedImagePosition: \"over\",\n        enlargedImageContainerDimensions: {\n          width: '60%',\n          height: '60%'\n        },\n        smallImage: smallImage,\n        largeImage: largeImage\n      }))));\n    }\n  }]);\n\n  return Item;\n}(React.Component);\n\nexport default Item;","map":null,"metadata":{},"sourceType":"module"}