{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/phenotypez/Desktop/WebDev/Projects/otg/on-the-grind/components/Item.tsx\";\nvar __jsx = React.createElement;\n// @ts-ignore\nimport React from 'react';\nimport Fade from '@material-ui/core/Fade';\nimport ReactImageMagnify from 'react-image-magnify';\nconst zoomDuration = 150;\n\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"updateWindowDimensions\", () => {\n      this.setState({\n        width: window.innerWidth\n      });\n    });\n\n    _defineProperty(this, \"swipeDisabled\", () => {\n      this.setState({\n        inMagnify: true\n      });\n      this.props.swipeDisabled();\n    });\n\n    _defineProperty(this, \"swipeTimer\", setTimeout(() => null, 0));\n\n    _defineProperty(this, \"touchStart\", () => {\n      this.swipeTimer = setTimeout(() => this.swipeDisabled(), zoomDuration);\n    });\n\n    _defineProperty(this, \"touchEnd\", () => {\n      clearTimeout(this.swipeTimer);\n      this.props.swipeEnabled();\n      this.setState({\n        inMagnify: false\n      });\n    });\n\n    this.state = {\n      width: 0,\n      inMagnify: false\n    };\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  getImageDimension() {\n    const {\n      width\n    } = this.state;\n\n    switch (true) {\n      // case width < 380:\n      //   return width;\n      case width < 600:\n        return width;\n\n      case width < 960:\n        return 450;\n\n      case width < 1280:\n        return 600;\n\n      case width < 1920:\n        return 700;\n\n      default:\n        return 800;\n    }\n  }\n\n  render() {\n    const {\n      article\n    } = this.props;\n    const width = this.getImageDimension();\n    let rootStyle = {\n      minHeight: this.getImageDimension() + 'px'\n    };\n\n    if (this.state.width < 600) {\n      rootStyle = {\n        minHeight: this.getImageDimension() + 'px'\n      };\n    }\n\n    const itemStyle = {\n      width: this.getImageDimension() + 'px'\n    };\n    const smallImage = {\n      alt: '',\n      width: width,\n      height: width,\n      src: article\n    };\n    const largeImage = {\n      src: article,\n      width: width * 1.7,\n      height: width * 1.7\n    };\n    const inMagnify = this.state.inMagnify && !this.props.fingerMoving;\n    return __jsx(\"div\", {\n      style: rootStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, __jsx(Fade, {\n      in: true,\n      timeout: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      onTouchStart: this.touchStart,\n      onTouchEnd: this.touchEnd,\n      onMouseEnter: this.touchStart,\n      onMouseLeave: this.touchEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, inMagnify ? __jsx(ReactImageMagnify, {\n      imageStyle: {\n        display: 'none'\n      },\n      enlargedImagePosition: \"over\",\n      smallImage: smallImage,\n      largeImage: largeImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }) : __jsx(ReactImageMagnify, {\n      pressDuration: zoomDuration,\n      imageStyle: itemStyle,\n      enlargedImagePosition: \"over\",\n      enlargedImageContainerDimensions: {\n        width: '60%',\n        height: '60%'\n      },\n      smallImage: smallImage,\n      largeImage: largeImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Item;","map":{"version":3,"sources":["/home/phenotypez/Desktop/WebDev/Projects/otg/on-the-grind/components/Item.tsx"],"names":["React","Fade","ReactImageMagnify","zoomDuration","Item","Component","constructor","props","setState","width","window","innerWidth","inMagnify","swipeDisabled","setTimeout","swipeTimer","clearTimeout","swipeEnabled","state","componentDidMount","updateWindowDimensions","addEventListener","componentWillUnmount","removeEventListener","getImageDimension","render","article","rootStyle","minHeight","itemStyle","smallImage","alt","height","src","largeImage","fingerMoving","touchStart","touchEnd","display"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport React from 'react';\nimport Fade from '@material-ui/core/Fade';\nimport ReactImageMagnify from 'react-image-magnify';\n\nconst zoomDuration = 150;\n\ntype Props = {\n  swipeDisabled: () => void;\n  swipeEnabled: () => void;\n  article: any;\n  fingerMoving: any;\n};\n\ntype State = {\n  width: number;\n  inMagnify: boolean;\n};\n\nclass Item extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      width: 0,\n      inMagnify: false,\n    };\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions = () => {\n    this.setState({width: window.innerWidth});\n  };\n\n  getImageDimension() {\n    const {width} = this.state;\n    switch (true) {\n      // case width < 380:\n      //   return width;\n      case width < 600:\n        return width;\n      case width < 960:\n        return 450;\n      case width < 1280:\n        return 600;\n      case width < 1920:\n        return 700;\n      default:\n        return 800;\n    }\n  }\n\n  swipeDisabled = () => {\n    this.setState({\n      inMagnify: true,\n    });\n    this.props.swipeDisabled();\n  };\n\n  swipeTimer = setTimeout(() => null, 0);\n\n  touchStart = () => {\n    this.swipeTimer = setTimeout(() => this.swipeDisabled(), zoomDuration);\n  };\n\n  touchEnd = () => {\n    clearTimeout(this.swipeTimer);\n    this.props.swipeEnabled();\n    this.setState({\n      inMagnify: false,\n    });\n  };\n\n  render() {\n    const {article} = this.props;\n    const width = this.getImageDimension();\n    let rootStyle = {\n      minHeight: this.getImageDimension() + 'px',\n    };\n    if (this.state.width < 600) {\n      rootStyle = {\n        minHeight: this.getImageDimension() + 'px',\n      };\n    }\n    const itemStyle = {\n      width: this.getImageDimension() + 'px',\n    };\n    const smallImage = {\n      alt: '',\n      width: width,\n      height: width,\n      src: article,\n    };\n    const largeImage = {\n      src: article,\n      width: width * 1.7,\n      height: width * 1.7,\n    };\n    const inMagnify = this.state.inMagnify && !this.props.fingerMoving;\n    return (\n      <div style={rootStyle}>\n        <Fade in={true} timeout={400}>\n          <div\n            onTouchStart={this.touchStart}\n            onTouchEnd={this.touchEnd}\n            onMouseEnter={this.touchStart}\n            onMouseLeave={this.touchEnd}>\n            {inMagnify ? (\n              <ReactImageMagnify\n                imageStyle={{display: 'none'}}\n                enlargedImagePosition=\"over\"\n                smallImage={smallImage}\n                largeImage={largeImage}\n              />\n            ) : (\n              <ReactImageMagnify\n                pressDuration={zoomDuration}\n                imageStyle={itemStyle}\n                enlargedImagePosition=\"over\"\n                enlargedImageContainerDimensions={{width: '60%', height: '60%'}}\n                smallImage={smallImage}\n                largeImage={largeImage}\n              />\n            )}\n          </div>\n        </Fade>\n      </div>\n    );\n  }\n}\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}